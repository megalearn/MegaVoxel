---
description: 
globs: 
alwaysApply: true
---
# Project overview

We are building a super-simple voxel model editor called "MegaVoxel".
The user can choose between a configured color palette.
In addition the color palette, there is also choose an "erase" button.

When creating a new model, the editor starts with a 9x9x9 block.
Each voxel should have the initail color of the first color in the palette.
The user can erase voxels to give shape to the model.

## Usage

### Embedding

```
import { MegaVoxel } from megavoxel;
const editor = new MegaVoxel(
    palette: [0xffffff, 0xff0000, 0x00ff00, 0x0000ff, 0xffff00, 0xff00ff, 0x00ffff, 0x222222],
    onModelUpdated: ...
);
scene.add(editor);
```

The onModelUpdated callback should be called when the user adds or deletes a voxel. It should not be called when the the initial model is loaded/created.

### Export

The output format is JSON.

```
{
    palette: ["0xffffff", "0xff0000", "0x00ff00", "0x0000ff", "0xffff00", "0xff00ff", "0x00ffff", "0x222222"]
    voxels: [
        {x: .., y: .., z: .., color: 0},
        {x: .., y: .., z: .., color: 1},
        {x: .., y: .., z: .., color: 2},
    ]
}
```

## Tech Stack

- TypeScript
- ThreeJS
- Vite

No other dependencies.

## File structure

MegaVoxel/
├── src/
│   ├── main.ts           # Main application entry point
│   ├── MegaVoxel.ts      # Core voxel editor component
│   └── CameraControls.ts # Camera orbit controls
├── dist/                 # Build output directory
│   ├── index.html
│   └── megavoxel.js
├── index.html           # Development entry point
├── package.json         # Project dependencies and scripts
├── tsconfig.json        # TypeScript configuration
└── vite.config.ts      # Vite build configuration

## Input

- Color picker consisting of on-screen buttons
- Erase button (last item in the the color buttons list)
- Mouse click/touch to add/remove voxels
- Dragging rotates the camera around the center/model (orbit control)
- Hovering over a voxel highlights it to help understand which voxel will be deleted/removed

The editor should have a similar feel to building things in Minecraft.

## Output

A single static megavoxel.html and megavoxel.js file.